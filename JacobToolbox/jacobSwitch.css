/* jacobSwitch.css */

:root {
	/* switch variables */
	--switchSlideSize: 1.3rem;
	--switchWidth: 6.6rem;

	/* flipper variables */
	--flipperRotX: 0deg;
	--flipspeed: 200ms;
	--bezier: cubic-bezier(.7,.18,.65,.11);

	/* shared variables */
	--backcolor: #fff;
	--textcolor: #000;
	--tintcolor: #0000;
}

/*
* JacobSwitch
*/
.jacobSwitch {
	display: inline-grid;
  justify-self: center;
  width: var(--switchWidth);
	/* height: var(--switchSlideSize); */
	/* width: 100%; */
	height: 100%;
  grid-auto-flow: row;
	box-sizing: content-box;
  overflow-x: clip;

	border: 1px solid #ccc;
	color: #000;
	background: #fff;

	user-select: none;
	transition: grid-template-columns .3s cubic-bezier(.84, -0.68, .22, 1.94),
	background-color .5s,
	outline .1s;
}

.jacobSwitch > input {
	grid-area: 1/1/1/4;
	/* width: var(--switchWidth); */
	/* height: var(--switchSlideSize); */
	width: 100%;
	height: 100%;
	place-self: center;
	margin: 0;
	z-index: 5;
	pointer-events: all;
	user-select: none;
	opacity: 0;
}
.l_left, .l_right {
	align-self: center;
	width: calc(var(--switchWidth) - var(--switchSlideSize));
	/* width: calc(100% - var(--switchSlideSize)); */
	height: var(--switchSlideSize);

  text-align: center;
	line-height: 1.2;
  font-family: 'Saira';
}
.l_left {
	grid-area: 1/1;
	justify-self: end;
}
.l_right {
	grid-area: 1/3;
  justify-self: start;
}
.switchSlide {
	grid-area: 1/2;
	place-self: center center;
	z-index: 1;
	width: var(--switchSlideSize);
	height: 100%;

	background-color: #e9e9ed;
	border: 1px #ccc solid;
	box-sizing: border-box;
}
.jacobSwitch {					/* switched right*/
  grid-template-columns:
  calc(var(--switchWidth) - var(--switchSlideSize))
  var(--switchSlideSize)
  .01px;
}
.jacobSwitch.checked { 	/* switched left*/
	grid-template-columns:
	.01px
	var(--switchSlideSize)
	calc(var(--switchWidth) - var(--switchSlideSize));
}
/* Hover Highlighting */
.jacobSwitch:hover > .switchSlide {
	background-color: #d1d0d8;
}
@keyframes switchHandleClockwise {
	0%{
		rotate: 0deg;
		border-radius: 0rem;
		}50%{
			border-radius: .5rem;
			}100%{
				rotate: .5turn;
				border-radius: 0rem;
				transform: translateY(-2px);
			}
		}
@keyframes switchHandleCountwise {
  0%{
    rotate: 0deg;
    border-radius: 0rem;
  }50%{
    border-radius: .5rem;
  }100%{
    rotate: -.5turn;
    border-radius: 0rem;
		transform: translateY(-2px);
  }
}


/*
* Jacob Flipper
*/
.jacobFlipper {
	display: inline-grid;
	width: 100%;
	height: 100%;
	box-sizing: border-box;

	transform-style: preserve-3d;

	pointer-events: none;
	user-select: none;
}
.jacobFlipper * {
	/* all children of the jacobFlipper share a cell */
	grid-area: 1/1/1/1;
	height: 100%;
	align-self: center;
	white-space: pre;
}
.jacobFlipper > input {
	transform: translateZ(-1rem);
	z-index: -1;
	opacity: 0;

	pointer-events: all;
	user-select: none;
}
.jacobFlipper > .selectable {
	opacity: 0%;
	user-select: text;
	pointer-events: auto;
}
.flippable {
	display: grid;
	transform-style: preserve-3d;
}
.flipFore, .flipRear {
	backface-visibility: hidden;
	background-color: var(--backcolor);
	text-align: center;
	box-sizing: border-box;
	display: flex;
	justify-content: center; /* align horizontal */
	align-items: center; /* align vertical */
	transition: background-color var(--flipspeed) var(--bezier);
}
.flipRear {
	transform: rotateX(180deg);
}
#text {
	width: 100px;
}

.flippable {
	transition: transform var(--flipspeed) var(--bezier);
	transform: rotateX(var(--flipperRotX));
}
.flipFore:before, .flipRear:before {
	content:'-';
	color: #0000;
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	transition: background-color var(--flipspeed) var(--bezier);
	background-color: var(--tintcolor);
}


/*
* Jacob Display Flippers
*/
.jacobAggregateFlipper {
	display: inline-grid;
	font-size: 1.5rem;
	font-family: "Courier New";
	grid-template-columns: repeat(64, auto);
	place-items: center;
}
.jacobAggregateFlipper .jacobFlipper * * {
	border: none !important;
}
.jacobAggregateFlipper .selectable {
	width: 0;
	z-index: 0;
	direction: rtl;
	color: #fff0;
}


/*
new Jacob Switch
*/
.jacobNewSwitch > svg > path {
	/* transition-property: d;
	transition: d 500ms ease; */
	animation: ease-in 900ms forwards;
	/* animation-name: xToCircle; */
	/* d: path('\
		M 								 8  1 \
		C 12  1		15  4		15  8 \
		C 15 12		12 15 	 8 15 \
		C  4 15 	 1 12 	 1  8 \
		C  1  4 	 4  1 	 8  1 \
		z'); */

}
.jacobNewSwitch > input[type=checkbox]:checked + svg > path {
	/* d: path('\
		M 								8 8 \
		C 16 0		16 0		8 8 \
		C 16 16 	16 16		8 8 \
		C 0 16 		0 16		8 8 \
		C 0 0 		0 0			8 8 \
		z'); */
	animation-name: circleToX;
}

@keyframes circleToX {
	0%
	{ /* circle */
		d: path('\
		M 								 8  1 \
		C 12  1		15  4		15  8 \
		C 15 12		12 15 	 8 15 \
		C  4 15 	 1 12 	 1  8 \
		C  1  4 	 4  1 	 8  1 \
		z');
	}
	49%
	{ /* line */
		d: path('\
		M 								8 8 \
		C 12 8		15 8		15 8 \
		C 15 8 	12 8		8 8 \
		C 4 8 		1 8		1 8 \
		C 1 8 		4 8			8 8 \
		z');
	}
	49%
	{ /* line */
		d: path('\
		M 								8 8 \
		C 12 8		15 8		15 8 \
		C 15 8 	12 8		8 8 \
		C 4 8 		1 8		1 8 \
		C 1 8 		4 8			8 8 \
		z');
	}
	50%
	{ /* line */
		d: path('\
		M 								8 8 \
		C 16 8		16 8		8 8 \
		C 16 8 	16 8		8 8 \
		C 0 8 		0 8		8 8 \
		C 0 8 		0 8			8 8 \
		z');
	}
	50%
	{ /* line */
		d: path('\
		M 								8 8 \
		C 16 8		16 8		8 8 \
		C 16 8 	16 8		8 8 \
		C 0 8 		0 8		8 8 \
		C 0 8 		0 8			8 8 \
		z');
	}
	100%
	{ /* X */
		d: path('\
		M 								8 8 \
		C 16 0		16 0		8 8 \
		C 16 16 	16 16		8 8 \
		C 0 16 		0 16		8 8 \
		C 0 0 		0 0			8 8 \
		z');
	}
}
